local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local lp = Players.LocalPlayer

_G.HighlightEnabled = _G.HighlightEnabled or false
_G.AutoTeamColor = false
_G.HighlightTeamCheck = false
_G.CustomHighlightColor = Color3.fromRGB(255, 255, 255)
_G.FillTransparency = 0.5
_G.OutlineTransparency = 0
_G.FriendList = _G.FriendList or {}

local Storage = Instance.new("Folder")
Storage.Parent = CoreGui
Storage.Name = "Highlight_Storage"

local highlightCache = {}
local pulseTime = 0

local function updateHighlight(highlight, plr)
    if table.find(_G.FriendList, plr.Name) then
        highlight.FillColor = Color3.fromRGB(144, 238, 144) -- Салатовый цвет
        highlight.OutlineColor = Color3.fromRGB(144, 238, 144)
        highlight.FillTransparency = 0.2 + 0.3 * (0.5 + 0.5 * math.sin(pulseTime))
    else
        local highlightColor = _G.AutoTeamColor and (plr.Team and plr.Team.TeamColor.Color or Color3.fromRGB(255, 255, 255)) or _G.CustomHighlightColor
        highlight.FillColor = highlightColor
        highlight.FillTransparency = _G.FillTransparency
        highlight.OutlineTransparency = _G.OutlineTransparency
        highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    end
end

local function getOrCreateHighlight(plr)
    if not highlightCache[plr.Name] then
        local highlight = Instance.new("Highlight")
        highlight.Name = plr.Name
        highlight.DepthMode = "AlwaysOnTop"
        highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
        highlight.Parent = Storage

        highlightCache[plr.Name] = highlight
    end
    return highlightCache[plr.Name]
end

local function removeHighlight(plrName)
    if highlightCache[plrName] then
        highlightCache[plrName]:Destroy()
        highlightCache[plrName] = nil
    end
end

local function manageHighlight(plr)
    local function updatePlayerHighlight()
        if _G.HighlightEnabled and not (plr == lp or (_G.HighlightTeamCheck and plr.Team == lp.Team)) then
            local highlight = getOrCreateHighlight(plr)
            updateHighlight(highlight, plr)
            highlight.Adornee = plr.Character
        else
            removeHighlight(plr.Name)
        end
    end

    updatePlayerHighlight()

    plr:GetPropertyChangedSignal("Team"):Connect(updatePlayerHighlight)
    plr.CharacterAdded:Connect(function(char)
        updatePlayerHighlight()
        local humanoid = char:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.Died:Connect(function()
                removeHighlight(plr.Name)
            end)
        end
    end)
end

Players.PlayerAdded:Connect(manageHighlight)
Players.PlayerRemoving:Connect(function(plr)
    removeHighlight(plr.Name)
end)

-- Обновляем состояние пульсации
RunService.Heartbeat:Connect(function(deltaTime)
    pulseTime = pulseTime + deltaTime * 2 -- Скорость пульсации

    for _, plr in ipairs(Players:GetPlayers()) do
        if highlightCache[plr.Name] then
            updateHighlight(highlightCache[plr.Name], plr)
        end
    end
end)

-- Следим за изменением состояния подсветки и параметров в реальном времени
local lastHighlightEnabled = _G.HighlightEnabled or false
local lastTeamCheck = _G.HighlightTeamCheck or false
local lastFillTransparency = _G.FillTransparency or 0
local lastOutlineTransparency = _G.OutlineTransparency or 0
local lastCustomHighlightColor = _G.CustomHighlightColor or Color3.fromRGB(255, 255, 255)

RunService.RenderStepped:Connect(function()
    local parametersChanged = lastTeamCheck ~= _G.HighlightTeamCheck or
                              lastFillTransparency ~= _G.FillTransparency or
                              lastOutlineTransparency ~= _G.OutlineTransparency or
                              lastCustomHighlightColor ~= _G.CustomHighlightColor

    if _G.HighlightEnabled ~= lastHighlightEnabled or parametersChanged then
        lastHighlightEnabled = _G.HighlightEnabled
        lastTeamCheck = _G.HighlightTeamCheck
        lastFillTransparency = _G.FillTransparency
        lastOutlineTransparency = _G.OutlineTransparency
        lastCustomHighlightColor = _G.CustomHighlightColor

        for _, v in ipairs(Players:GetPlayers()) do
            manageHighlight(v)
        end
    else
        -- Обновляем цвет команды в реальном времени
        for _, v in ipairs(Players:GetPlayers()) do
            if highlightCache[v.Name] then
                updateHighlight(highlightCache[v.Name], v)
            end
        end
    end
end)

-- Периодически проверяем и обновляем настройки
RunService.Heartbeat:Connect(function()
    if _G.HighlightEnabled then
        for _, plr in ipairs(Players:GetPlayers()) do
            if not highlightCache[plr.Name] then
                manageHighlight(plr)
            end
        end
    end
end)

-- Инициализация подсветки для всех игроков
for _, plr in ipairs(Players:GetPlayers()) do
    manageHighlight(plr)
end
