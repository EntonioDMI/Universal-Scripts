-- Получаем игрока
local player = game.Players.LocalPlayer

-- Изначальные значения
_G.MyScriptPlayerSpeedEnabled = false
_G.MyScriptPlayerSpeed = 16
_G.MyScriptPlayerJumpHeight = 50

local currentSpeed = _G.MyScriptPlayerSpeed
local currentJumpHeight = _G.MyScriptPlayerJumpHeight
local currentSpeedEnabled = _G.MyScriptPlayerSpeedEnabled

local function simulatePlayerModifications(character)
    local humanoid = character:WaitForChild("Humanoid")
    local rootPart = character:WaitForChild("HumanoidRootPart")

    -- Подключаем функцию к RenderStepped для постоянного изменения параметров
    local connection
    connection = game:GetService("RunService").RenderStepped:Connect(function()
        if _G.MyScriptPlayerSpeedEnabled and humanoid and rootPart then
            -- Симулируем увеличение скорости
            local moveDirection = humanoid.MoveDirection * (_G.MyScriptPlayerSpeed - humanoid.WalkSpeed) * game:GetService("RunService").RenderStepped:Wait()
            rootPart.CFrame = rootPart.CFrame + moveDirection

            -- Симулируем увеличение высоты прыжка
            if humanoid:GetState() == Enum.HumanoidStateType.Jumping then
                rootPart.Velocity = Vector3.new(rootPart.Velocity.X, _G.MyScriptPlayerJumpHeight, rootPart.Velocity.Z)
            end
        end
    end)

    -- Отключаем соединение, когда персонаж умирает
    humanoid.Died:Connect(function()
        connection:Disconnect()
    end)
end

-- Подключаем функцию к событию CharacterAdded
player.CharacterAdded:Connect(simulatePlayerModifications)

-- Если персонаж уже загружен, применяем изменения сразу
if player.Character then
    simulatePlayerModifications(player.Character)
end

-- Функция для обновления конфигурации
local function updateConfiguration()
    while true do
        -- Проверяем изменения в конфигурации
        if _G.MyScriptPlayerSpeedEnabled ~= currentSpeedEnabled or
           _G.MyScriptPlayerSpeed ~= currentSpeed or
           _G.MyScriptPlayerJumpHeight ~= currentJumpHeight then
           
            currentSpeedEnabled = _G.MyScriptPlayerSpeedEnabled
            currentSpeed = _G.MyScriptPlayerSpeed
            currentJumpHeight = _G.MyScriptPlayerJumpHeight
            
            if player.Character and currentSpeedEnabled then
                print("Симуляция увеличения скорости до: " .. currentSpeed)
                print("Симуляция увеличения высоты прыжка до: " .. currentJumpHeight)
            end
        end
        wait(0.1) -- Проверяем изменения каждые 0.1 секунды
    end
end

-- Запускаем в отдельном потоке для постоянного обновления
spawn(updateConfiguration)
